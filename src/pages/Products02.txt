import { useEffect, useState } from "react";
import { Button, Card, Col, Collapse, Container, Row, Table } from "react-bootstrap";
import { API_BASE_URL } from "../config/config";
import axios from "axios";
import { Link, useNavigate } from "react-router-dom";



/* step 1 
contents card display function 
don't create field search , paging function 
--> next day, Admin contents card list and paging

step 2 
if User property is Admin, add/mod/del button is revealed
make del button
*/


function App({ user }) {
    // const Author = false;
    // if (user === 'ADMIN') { Author = true; }




    // Spring에서 넘겨받은 상품 목록
    const [products, setProduct] = useState([]);
    const navigate = useNavigate();

    useEffect(() => {
        const url = `${API_BASE_URL}/products/list`

        axios
            .get(url, {})
            .then((res) => {
                console.log(res.data);
                setProduct(res.data)
            })
            .catch((error) => {
                console.log(error);
            });
    }, []);
    const makeAdminButtons = (item, user, navigate) => {
        if (user?.role !== 'ADMIN') {

        }
        return (
            <div className="d-flex justify-content-center">
                <Button
                    variant="warning"
                    className="mb-2"
                    size="sm"
                    onClick={(evt) => {
                        evt.stopPropagation();
                        alert('Modify')
                    }}>
                    Modify</Button >
                &nbsp;
                <Button
                    variant="danger"
                    className="mb-2"
                    size="sm"
                    onClick={async (evt) => {
                        evt.stopPropagation();

                        const isDelete = window.confirm(`If you really delete ${item.name}?`);
                        if (isDelete === false) {
                            alert(`Cancel`)
                            return;
                        }

                        try {// 상품을 삭제 후 다시 상품 목록 페이지를 보여줌.
                            await axios.delete(`${API_BASE_URL}/products/delete/${item.id}`)
                            alert(`${item.name} is deleted `);
                            navigate(`/products`);
                        } catch (error) {
                            console.log(error);
                            alert(`Fail to delete : ${error.response?.data || error.message}`)
                        }
                    }}>
                    Delete</Button>
            </div>
        );


    }

    return (
        <Container className="my-4">
            <h1 className="my-4">Product List</h1>
            <Link to={`/products/insert`}>
                {user?.role === 'ADMIN' && (
                    <Button variant="primary" className="mb-3">
                        Register
                    </Button>
                )}
            </Link>
            {/* Field search Area */}



            {/* Content Area */}
            <Row>
                {products.map((item) => (
                    <Col key={item.id} md={3} >
                        <Card className="h-100" style={{ cursor: 'pointer' }}>
                            <Card.Img
                                variant="top"
                                src={`${API_BASE_URL}/images/${item.image}`}
                                alt={item.name}
                                style={{ width: '100%', height: '200px' }}
                                onClick={() => navigate()}
                            />
                            <Card.Body >
                                {/* borderCollapse collapse : table element 간 서로 붙여 준다. 기본값 .. seperate 는 서로 띄워준다. */}
                                <table style={{ width: '100%', borderCollapse: 'collapse', border: 'none' }} >
                                    <tbody>
                                        <tr>
                                            <td style={{ width: '70%', padding: '4px', border: 'none' }} >
                                                <Card.Title>{item.name}({item.id})</Card.Title>
                                            </td>
                                            {/* textAlign: 수평 정렬 verticalAlign: 수직 정렬  rowSpan: 행방향으로 병합시 사용 <-> colSpan */}
                                            <td rowSpan={2} style={{ padding: '4px', border: 'none', textAlign: 'center', verticalAlign: 'middle' }} >
                                                {makeAdminButtons(item, user, navigate)}
                                            </td>
                                        </tr>
                                        <tr>
                                            <td style={{ width: '70%', padding: '4px', border: 'none' }} >
                                                <Card.Text>Price : {item.price.toLocaleString()}￦</Card.Text>
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>


                            </Card.Body>
                        </Card>
                    </Col>
                ))}
            </Row>


            {/* Paging Area */}


        </Container>
    )
}
export default App;